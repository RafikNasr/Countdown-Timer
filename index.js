<script>(function() { document.addEventListener('DOMContentLoaded', function() { var $countdowns = document.querySelectorAll('countdown-timer'); $countdowns.forEach(function ($countdown) { var $iframe = document.createElement('iframe'); $iframe.setAttribute('style', 'width: 100% !important; display: block !important; border: 0 !important;'); $iframe.setAttribute('frameborder', '0'); $countdown.parentNode.replaceChild($iframe, $countdown); $iframe.contentWindow.document.body.insertAdjacentHTML('afterbegin', '<div class="countdown"></div>'); var CSS = document.createElement('style'); CSS.innerHTML = '* { box-sizing: border-box; } :root { font-size: 16px; } html, body { margin: 0; padding: 0; font-family: Arial; } .hide { display: none; } .countdown { background-color: rgba(255,255,255,1); height: auto; margin: 15px 0 15px 0; padding: 10px 0 10px 0; width: 100%; } .countdown .countdown-title { color: rgba(0,0,0,1); font-size: 32px; line-height: 1.2em; font-weight: bold; margin-bottom: 0.5em; text-align: center; } .countdown .countdown-timer { text-align: center; display: flex; flex: 0 0 auto; justify-content: center; gap: 10px; } .countdown .countdown-timer .countdown-time { background-color: rgba(0,0,0,1); border-radius: 0.1em; color: rgba(255,255,255,1); display: inline-block; font-size: 34px; font-weight: normal; height: auto; line-height: 1.25em; padding: 0.15em 0.34em; text-align: center; } .countdown .countdown-timer .countdown-time-text { color: rgba(0,0,0,1); display: block; font-size: 13px; line-height: 1.2em; font-weight: bold; letter-spacing: 0; margin-top: 0.8em; } @media (max-width: 767px) { .countdown .countdown-title { font-size: 32px; } .countdown .countdown-timer .countdown-time { font-size: 34px; } .countdown .countdown-timer .countdown-time-text { font-size: 13px; } }'; $iframe.contentWindow.document.head.appendChild(CSS); var JS = document.createElement('script'); JS.innerHTML = '(function() { var $countdown = document.querySelector(".countdown"); $countdown.innerHTML = \'<div class="countdown-title">Hurry Up! Get the offer before it ends!</div> <div class="countdown-timer"> <div > <span class="countdown-time days">00</span> <span class="countdown-time-text">Days</span> </div> <div > <span class="countdown-time hours">00</span> <span class="countdown-time-text">Hours</span> </div> <div > <span class="countdown-time minutes">07</span> <span class="countdown-time-text">Minutes</span> </div> <div > <span class="countdown-time seconds">47</span> <span class="countdown-time-text">Seconds</span> </div> </div>\'; function getRemainingTime(endtime) { var total = Date.parse(endtime) - Date.parse(new Date()), seconds = Math.floor(total / 1000 % 60), minutes = Math.floor(total / 1000 / 60 % 60), hours = Math.floor(total / (1000 * 60 * 60) % 24), days = Math.floor(total / (1000 * 60 * 60 * 24)); return { total: total, days: days, hours: hours, minutes: minutes, seconds: seconds }; } function initializeCountdown($countdown, endtime) { var $days = $countdown.querySelector(".days"), $hours = $countdown.querySelector(".hours"), $minutes = $countdown.querySelector(".minutes"), $seconds = $countdown.querySelector(".seconds"); function updateCountdown() { var _getRemainingTime = getRemainingTime(endtime), total = _getRemainingTime.total, days = _getRemainingTime.days, hours = _getRemainingTime.hours, minutes = _getRemainingTime.minutes, seconds = _getRemainingTime.seconds; if (total < 0) { clearInterval(timeinterval); $days.innerHTML = "00"; $hours.innerHTML = "00"; $minutes.innerHTML = "00"; $seconds.innerHTML = "00"; if (!previewMode) { switch (finish) { case "restart-countdown": if (typeTime === "manual") { restart(); } break; case "redirect-to-url": if (redirectUrl) { window.parent.location.href = redirectUrl; } else { window.parent.location.href = "about:blank"; } break; case "hide-countdown": $countdown.style.display = "none"; break; case "do-nothing": break; } } } else { $days.innerHTML = days.toString().padStart(2, "0"); $hours.innerHTML = hours.toString().padStart(2, "0"); $minutes.innerHTML = minutes.toString().padStart(2, "0"); $seconds.innerHTML = seconds.toString().padStart(2, "0"); } } var timeinterval = setInterval(updateCountdown, 1000); updateCountdown(); } function init() { if (persistence && typeTime === "manual" && !previewMode) { var storageDeadline = localStorage.getItem("deadline"); if (storageDeadline) { deadline = storageDeadline; } else { localStorage.setItem("deadline", deadline); } } var time = new Date(deadline); initializeCountdown($countdown, time); } function getManualDeadline() { return new Date(Date.parse(new Date()) + (undefined + undefined + undefined + 0) * 1000); } function restart() { localStorage.removeItem("deadline"); deadline = getManualDeadline(); init(); } function updateSize() { var defaultStyle = "width: 100% !important; display: block !important; border: 0 !important;"; window.frameElement.setAttribute("style", defaultStyle + "height: 0px !important;"); var countdownHeight = document.querySelector("html").offsetHeight; window.frameElement.setAttribute("style", defaultStyle + "height: " + countdownHeight + "px !important;"); } function checkIfResize() { var c = w.innerWidth || e.clientWidth || b.clientWidth; if (c !== x) { x = c; updateSize(); } } var previewMode = false, persistence = true, typeTime = "target-time", finish = "redirect-to-url", redirectUrl = "", deadline = typeTime === "target-time" ? "2024-05-18T09:13:00.000Z" : getManualDeadline(); init(); var w = window, d = document, e = d.documentElement, b = d.getElementsByTagName("body")[0], x = w.innerWidth || e.clientWidth || g.clientWidth; updateSize(); window.onresize = checkIfResize; })();'; $iframe.contentWindow.document.body.appendChild(JS); }); }); })();</script>
